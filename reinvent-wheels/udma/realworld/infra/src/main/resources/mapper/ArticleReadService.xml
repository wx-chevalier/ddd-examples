<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="icu.ngte.realworld.infra.dmr.readservice.ArticleReadService">
    <sql id="profileColumns">
        U.id userId,
        U.username userUsername,
        U.bio userBio,
        U.image userImage
    </sql>
    <sql id="selectArticleData">
        select
        A.id articleId,
        A.slug articleSlug,
        A.title articleTitle,
        A.description articleDescription,
        A.body articleBody,
        A.created_at articleCreatedAt,
        A.updated_at articleUpdatedAt,
        T.name tagName,
        <include refid="profileColumns"/>
        from
        articles A
        left join article_tags AT on A.id = AT.article_id
        left join tags T on T.id = AT.tag_id
        left join users U on U.id = A.user_id
    </sql>

    <select id="findById" resultMap="transfer.data.articleData">
        <include refid="selectArticleData"/>
        where A.id = #{id}
    </select>
    <select id="findBySlug" resultMap="transfer.data.articleData">
        <include refid="selectArticleData"/>
        where A.slug = #{slug}
    </select>
    <select id="queryArticles" resultMap="articleId">
        select
        DISTINCT(A.id) articleId, A.created_at
        from
        articles A
        left join article_tags AT on A.id = AT.article_id
        left join tags T on T.id = AT.tag_id
        left join article_favorites AF on AF.article_id = A.id
        left join users AU on AU.id = A.user_id
        left join users AFU on AFU.id = AF.user_id
        <where>
            <if test="tag != null">
                T.name = #{tag}
            </if>
            <if test="author != null">
                AND AU.username = #{author}
            </if>
            <if test="favoritedBy != null">
                AND AFU.username = #{favoritedBy}
            </if>
        </where>
        order by A.created_at desc
        limit #{page.offset}, #{page.limit}
    </select>
    <select id="countArticle" resultType="java.lang.Integer">
        select
        count(DISTINCT A.id)
        from
        articles A
        left join article_tags AT on A.id = AT.article_id
        left join tags T on T.id = AT.tag_id
        left join article_favorites AF on AF.article_id = A.id
        left join users AU on AU.id = A.user_id
        left join users AFU on AFU.id = AF.user_id
        <where>
            <if test="tag != null">
                T.name = #{tag}
            </if>
            <if test="author != null">
                AND AU.username = #{author}
            </if>
            <if test="favoritedBy != null">
                AND AFU.username = #{favoritedBy}
            </if>
        </where>
    </select>
    <select id="findArticles" resultMap="transfer.data.articleData">
        <include refid="selectArticleData"/>
        where A.id in
        <foreach index="index" collection="articleIds" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        order by A.created_at desc
    </select>
    <select id="findArticlesOfAuthors" resultMap="transfer.data.articleData">
        <include refid="selectArticleData"/>
        where A.user_id in
        <foreach index="index" collection="authors" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        limit #{page.offset}, #{page.limit}
    </select>
    <select id="countFeedSize" resultType="java.lang.Integer">
        select count(1) from articles A where A.user_id in
        <foreach collection="authors" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>

    <resultMap id="articleId" type="string">
        <id javaType="string" column="articleId"/>
    </resultMap>
</mapper>